FROM {{ namespace }}/{{ image_prefix }}base:{{ tag }}
LABEL maintainer="{{ maintainer }}" name="{{ image_name }}" build-date="{{ build_date }}"

{% block kolla_toolbox_header %}{% endblock %}

{% set virtualenv_path='/opt/ansible' %}
{% set os_client_config= virtualenv_path + '/lib/python' + distro_python_version + '/site-packages/os_client_config/defaults.json' %}

{% import "macros.j2" as macros with context %}

{{ macros.configure_user(name='ansible') }}

{% if base_package_type == 'rpm' %}
    {% set kolla_toolbox_packages = [
        'crudini',
        'gcc',
        'gdisk',
        'git',
        'jq',
        'libffi-devel',
        'libxml2-devel',
        'libxslt-devel',
        'make',
        'openssh-clients',
        'openssl-devel',
        'python-devel',
        'ceph-${KOLLA_CEPH_RELEASE}-0.el7.x86_64',
        'ceph-base-${KOLLA_CEPH_RELEASE}-0.el7.x86_64',
        'ceph-common-${KOLLA_CEPH_RELEASE}-0.el7.x86_64',
        'ceph-mds-${KOLLA_CEPH_RELEASE}-0.el7.x86_64',
        'ceph-mgr-${KOLLA_CEPH_RELEASE}-0.el7.x86_64',
        'ceph-mon-${KOLLA_CEPH_RELEASE}-0.el7.x86_64',
        'ceph-osd-${KOLLA_CEPH_RELEASE}-0.el7.x86_64',
        'ceph-selinux-${KOLLA_CEPH_RELEASE}-0.el7.x86_64',
        'libcephfs2-${KOLLA_CEPH_RELEASE}-0.el7.x86_64',
        'libradosstriper1-${KOLLA_CEPH_RELEASE}-0.el7.x86_64',
        'librbd1-${KOLLA_CEPH_RELEASE}-0.el7.x86_64',
        'librgw2-${KOLLA_CEPH_RELEASE}-0.el7.x86_64',
        'python-cephfs-${KOLLA_CEPH_RELEASE}-0.el7.x86_64',
        'python-rados-${KOLLA_CEPH_RELEASE}-0.el7.x86_64',
        'python-rgw-${KOLLA_CEPH_RELEASE}-0.el7.x86_64',
        'python-rbd-${KOLLA_CEPH_RELEASE}-0.el7.x86_64',
        'ceph-radosgw-${KOLLA_CEPH_RELEASE}-0.el7.x86_64',
        'librados2-${KOLLA_CEPH_RELEASE}-0.el7.x86_64'
     ] %}

    {% if ceph_version == 'nautilus' %}
        {% set kolla_toolbox_packages = kolla_toolbox_packages + [
            'python-ceph-argparse-${KOLLA_CEPH_RELEASE}-0.el7.x86_64'
        ] %}
    {% endif %}
{% endif %}
{{ macros.install_packages(kolla_toolbox_packages | customizable("packages")) }}

{% block kolla_toolbox_source_install_python_pip %}
{{ macros.get_pip() }}
{% endblock %}

{% set kolla_toolbox_pip_virtualenv_packages = [
        'virtualenv'
    ] %}

RUN {{ macros.install_pip(kolla_toolbox_pip_virtualenv_packages|customizable("pip_packages"), constraints=false) }} \
    && virtualenv --system-site-packages {{ virtualenv_path }}

ENV PATH {{ virtualenv_path }}/bin:$PATH

{% set kolla_toolbox_pip_packages = [
        'ansible==2.8.*',
        'cmd2',
        'os-client-config',
        'pbr',
        'pymongo',
        'pytz',
        'pyudev',
        'shade'
    ] %}

RUN {{ macros.install_pip(kolla_toolbox_pip_packages | customizable("pip_packages"), constraints=false) }} \
    && mkdir -p /etc/ansible /usr/share/ansible \
    && echo 'localhost ansible_connection=local ansible_python_interpreter={{ virtualenv_path }}/bin/python' > /etc/ansible/hosts \
    && sed -i 's|  "identity_api_version": "2.0",|  "identity_api_version": "3",|' {{ os_client_config }}

ENV ANSIBLE_LIBRARY /usr/share/ansible:$ANSIBLE_LIBRARY

COPY find_disks.py /usr/share/ansible/
COPY ansible.cfg /var/lib/ansible/.ansible.cfg
RUN chmod 644 /usr/share/ansible/find_disks.py \
              /var/lib/ansible/.ansible.cfg

COPY ansible_sudoers /etc/sudoers.d/kolla_ansible_sudoers
RUN chmod 440 /etc/sudoers.d/kolla_ansible_sudoers

{% block kolla_toolbox_footer %}{% endblock %}
{% block footer %}{% endblock %}

USER ansible
