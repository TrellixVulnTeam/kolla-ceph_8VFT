---
- name: Looking up OSDs for Ceph
  become: true
  command: docker exec -t kolla_toolbox sudo -E ansible localhost
    -m find_disks
    -a "partition_name='KOLLA_CEPH_DATA' match_mode='prefix' use_udev={{ kolla_ceph_use_udev }}"
  register: osd_lookup
  changed_when: osd_lookup.stdout.find('localhost | SUCCESS => ') != -1 and (osd_lookup.stdout.split('localhost | SUCCESS => ')[1]|from_json).changed
  failed_when: osd_lookup.stdout.split()[2] != 'SUCCESS'

- name: Parsing disk info for Ceph OSDs
  set_fact:
    osd_disks: "{{ (osd_lookup.stdout.split('localhost | SUCCESS => ')[1]|from_json).disks|from_json }}"

- name: Filter DISK type osd
  set_fact:
    osd_disk_disks: "{{ osd_disk_disks | default([]) | union([ item ]) }}"
  with_items: "{{ osd_disks }}"
  no_log: True
  when: item.osd_disk_mode == "DISK"

- name: Filter LVM type osd
  set_fact:
    osd_lvm_disks: "{{ osd_lvm_disks | default([]) | union([ item ]) }}"
  with_items: "{{ osd_disks }}"
  no_log: True
  when: item.osd_disk_mode == "LVM"

- name: Mounting Ceph OSD volumes for DISK
  become: true
  mount:
    src: "UUID={{ item.osd_fs_uuid }}"
    fstype: "{{ ceph_osd_filesystem }}"
    state: mounted
    name: "/var/lib/ceph/osd/{{ item['osd_fs_uuid'] }}"
    opts: "{{ ceph_regular_mount_options if item.partition_type | default('regular') == 'regular' else ceph_iscsi_mount_options }}"
  with_items: "{{ osd_disk_disks | default([]) }}"

- name: Mounting Ceph OSD volumes for LVM filestore
  become: true
  mount:
    src: "{{ item.osd_data_osd }}"
    fstype: "{{ ceph_osd_filesystem }}"
    state: mounted
    name: "/var/lib/ceph/osd/{{ item['osd_fs_uuid'] }}"
    opts: "{{ ceph_tmpfs_mount_options }}"
  with_items: "{{ osd_lvm_disks | default([]) }}"
  when: item.osd_store_type == "filestore"

- name: Mounting Ceph OSD volumes for LVM bluestore
  become: true
  mount:
    src: "tmpfs"
    fstype: "tmpfs"
    state: mounted
    name: "/var/lib/ceph/osd/{{ item['osd_fs_uuid'] }}"
    opts: "{{ ceph_tmpfs_mount_options }}"
  with_items: "{{ osd_lvm_disks | default([]) }}"
  when: item.osd_store_type == "bluestore"

- name: Gathering OSD IDs for DISK
  become: true
  command: "cat /var/lib/ceph/osd/{{ item['osd_fs_uuid'] }}/whoami"
  with_items: "{{ osd_disk_disks | default([]) }}"
  register: osd_ids
  changed_when: False
  failed_when: osd_ids.rc != 0
