---
- name: Ensuring config directories exist
  file:
    path: "{{ node_config_directory }}/{{ item }}"
    state: "directory"
    owner: "{{ config_owner_user }}"
    group: "{{ config_owner_group }}"
    mode: "0770"
  become: true
  with_items:
    - "kolla-toolbox"
    - "cron"
    - "cron/logrotate"

- name: Ensuring fluentd config directories exist
  file:
    path: "{{ node_config_directory }}/{{ item }}"
    state: "directory"
    mode: "0770"
  become: true
  with_items:
    - "fluentd"
    - "fluentd/input"
    - "fluentd/output"
    - "fluentd/format"
    - "fluentd/filter"
  when: enable_fluentd | bool

- name: Copying over config.json files for services
  template:
    src: "{{ item.key }}.json.j2"
    dest: "{{ node_config_directory }}/{{ item.key }}/config.json"
    mode: "0660"
  become: true
  when: item.value.enabled | bool
  with_dict: "{{ common_services }}"
  notify:
    - "Restart {{ item.key }} container"

- name: Find custom fluentd input config files
  local_action:
    module: find
    path: "{{ node_custom_config }}/fluentd/input"
    pattern: "*.conf"
  run_once: True
  register: find_custom_fluentd_inputs
  when:
    - enable_fluentd | bool

- name: Copying over fluentd input config files
  vars:
    customised_input_files: "{{ find_custom_fluentd_inputs.files | map(attribute='path') | map('basename') | list }}"
  template:
    src: "conf/input/{{ item }}.conf.j2"
    dest: "{{ node_config_directory }}/fluentd/input/{{ item }}.conf"
    mode: "0660"
  become: true
  when:
    - enable_fluentd | bool
    - item ~ '.conf' not in customised_input_files
  with_items:
    - "00-global"
    - "01-syslog"
  notify:
    - Restart fluentd container

- name: Copying over custom fluentd input config files
  template:
    src: "{{ item.path }}"
    dest: "{{ node_config_directory }}/fluentd/input/{{ item.path | basename }}"
    mode: "0660"
  when:
    - enable_fluentd | bool
  with_items: "{{ find_custom_fluentd_inputs.files }}"
  notify:
    - Restart fluentd container

- name: Find custom fluentd output config files
  local_action:
    module: find
    path: "{{ node_custom_config }}/fluentd/output"
    pattern: "*.conf"
  run_once: True
  register: find_custom_fluentd_outputs
  when:
    - enable_fluentd | bool

- name: Find custom fluentd format config files
  local_action:
    module: find
    path: "{{ node_custom_config }}/fluentd/format"
    pattern: "*.conf"
  run_once: True
  register: find_custom_fluentd_format
  when:
    - enable_fluentd | bool

- name: Copying over fluentd format config files
  vars:
    customised_format_files: "{{ find_custom_fluentd_format.files | map(attribute='path') | map('basename') | list }}"
  template:
    src: "conf/format/{{ item }}.conf.j2"
    dest: "{{ node_config_directory }}/fluentd/format/{{ item }}.conf"
    mode: "0660"
  become: true
  with_items:
    - "apache_access"
    - "wsgi_access"
  when:
    - enable_fluentd | bool
    - item ~ '.conf' not in customised_format_files
  notify:
    - Restart fluentd container

- name: Copying over custom fluentd format config files
  template:
    src: "{{ item.path }}"
    dest: "{{ node_config_directory }}/fluentd/format/{{ item.path | basename }}"
    mode: "0660"
  when:
    - enable_fluentd | bool
  with_items: "{{ find_custom_fluentd_format.files }}"
  notify:
    - Restart fluentd container

- name: Find custom fluentd filter config files
  local_action:
    module: find
    path: "{{ node_custom_config }}/fluentd/filter"
    pattern: "*.conf"
  run_once: True
  register: find_custom_fluentd_filters
  when: enable_fluentd | bool

- name: Copying over fluentd filter config files
  vars:
    customised_filter_files: "{{ find_custom_fluentd_filters.files | map(attribute='path') | map('basename') | list }}"
  template:
    src: "conf/filter/{{ item.src }}.conf.j2"
    dest: "{{ node_config_directory }}/fluentd/filter/{{ item.dest }}.conf"
    mode: "0660"
  become: true
  with_items:
    - src: 00-record_transformer
      dest: 00-record_transformer
    - src: "{{ '01-rewrite-0.12' }}"
      dest: 01-rewrite
  when:
    - enable_fluentd | bool
    - item.src ~ '.conf' not in customised_filter_files
  notify:
    - Restart fluentd container

- name: Copying over custom fluentd filter config files
  template:
    src: "{{ item.path }}"
    dest: "{{ node_config_directory }}/fluentd/filter/{{ item.path | basename }}"
    mode: "0660"
  become: true
  with_items: "{{ find_custom_fluentd_filters.files }}"
  when: enable_fluentd | bool
  notify:
    - Restart fluentd container

- name: Copying over td-agent.conf
  template:
    src: "td-agent.conf.j2"
    dest: "{{ node_config_directory }}/{{ item }}/td-agent.conf"
    mode: "0660"
  become: true
  with_items:
    - "fluentd"
  when: enable_fluentd | bool
  notify:
    - Restart fluentd container

- name: Copying over cron logrotate config files
  template:
    src: "cron-logrotate-{{ item.name }}.conf.j2"
    dest: "{{ node_config_directory }}/cron/logrotate/{{ item.name }}.conf"
    mode: "0660"
  become: true
  when: item.enabled | bool
  with_items:
    - { name: "ansible", enabled: "yes" }
    - { name: "ceph", enabled: "yes" }
    - { name: "global", enabled: "yes" }
  notify:
    - Restart cron container

- name: Ensuring config directories have correct owner and permission
  become: true
  file:
    path: "{{ node_config_directory }}/{{ item.key }}"
    owner: "{{ config_owner_user }}"
    group: "{{ config_owner_group }}"
    mode: "0770"
  ignore_errors: "{{ ansible_check_mode }}"
  when:
    - item.value.enabled | bool
    - item.key != "kolla-toolbox"
  with_dict: "{{ common_services }}"

- name: Check common containers
  become: true
  kolla_docker:
    action: "compare_container"
    common_options: "{{ docker_common_options }}"
    name: "{{ item.value.container_name }}"
    image: "{{ item.value.image }}"
    volumes: "{{ item.value.volumes }}"
    dimensions: "{{ item.value.dimensions }}"
    privileged: "{{ item.value.privileged | default(False) }}"
    environment: "{{ item.value.environment }}"
  when:
    - ceph_action != "config"
    - item.value.enabled | bool
  with_dict: "{{ common_services }}"
  notify:
    - "Restart {{ item.key }} container"
